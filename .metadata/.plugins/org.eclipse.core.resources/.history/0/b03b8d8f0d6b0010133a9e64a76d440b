package com.ishika.foodwaste.web.controller;

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.ishika.foodwaste.jpa.entity.DeliveryPerson;
import com.ishika.foodwaste.web.service.DeliveryService;

import jakarta.servlet.http.HttpSession;

@RestController
@RequestMapping("/delivery")
public class DeliveryController {

    @Autowired
    private DeliveryService deliveryService;

    // ✅ Login
    @PostMapping("/login")
    public ResponseEntity<?> login(@RequestBody Map<String, String> data, HttpSession session) {
        String email = data.get("email");
        String password = data.get("password");

        String result = deliveryService.login(email, password);
        if (result.equals("Login successful")) {
            DeliveryPerson person = deliveryService.getByEmail(email);
            session.setAttribute("Did", person.getDid());
            session.setAttribute("name", person.getName());
            session.setAttribute("city", person.getCity());
            return ResponseEntity.ok(result);
        }
        return ResponseEntity.badRequest().body(result);
    }

    // ✅ Register
    @PostMapping("/register")
    public ResponseEntity<?> register(@RequestBody DeliveryPerson person) {
        String result = deliveryService.register(person);
        return result.contains("successful")
            ? ResponseEntity.ok(result)
            : ResponseEntity.badRequest().body(result);
    }

    // ✅ Unassigned orders
    @GetMapping("/unassigned")
    public ResponseEntity<?> getUnassigned(@RequestParam String city) {
        return ResponseEntity.ok(deliveryService.getUnassignedOrders(city));
    }
//    public ResponseEntity<?> getUnassigned(HttpSession session) {
//        String city = (String) session.getAttribute("city");
//        if (city == null) return ResponseEntity.status(403).body("Unauthorized");
//
//        return ResponseEntity.ok(deliveryService.getUnassignedOrders(city));
//    }

    // ✅ My orders
    @GetMapping("/myorders")
    public ResponseEntity<?> getMyOrders(HttpSession session) {
        Integer id = (Integer) session.getAttribute("Did");
        if (id == null) return ResponseEntity.status(403).body("Unauthorized");

        return ResponseEntity.ok(deliveryService.getMyOrders(id));
    }

    // ✅ Take order
    @PostMapping("/takeorder")
    public ResponseEntity<?> takeOrder(@RequestBody Map<String, Integer> data, HttpSession session) {
        Integer id = (Integer) session.getAttribute("Did");
        if (id == null) return ResponseEntity.status(403).body("Unauthorized");

        String result = deliveryService.takeOrder(data.get("orderId"), id);
        return result.contains("successfully")
            ? ResponseEntity.ok(result)
            : ResponseEntity.badRequest().body(result);
    }
}
