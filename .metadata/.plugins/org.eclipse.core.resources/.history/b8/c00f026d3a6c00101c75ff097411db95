package com.ishika.foodwaste.web.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;

import com.ishika.foodwaste.jpa.entity.FoodDonation;
import com.ishika.foodwaste.jpa.entityManager.FoodDonationManager;
import com.ishika.foodwaste.web.interfaces.FoodDonationFacade;

public class FoodDonationService implements FoodDonationFacade{
	
    @Autowired
    private FoodDonationManager repo;

    @Override
    public boolean addDonation(FoodDonation donation) {
        try {
            repo.save(donation);
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    @Override
    public boolean updateDonation(int id, FoodDonation updated) {
        FoodDonation existing = repo.findById(id);
        if (existing != null) {
            existing.setEmail(updated.getEmail());
            existing.setFood(updated.getFood());
            existing.setType(updated.getType());
            existing.setCategory(updated.getCategory());
            existing.setPhoneno(updated.getPhoneno());
            existing.setLocation(updated.getLocation());
            existing.setAddress(updated.getAddress());
            existing.setName(updated.getName());
            existing.setQuantity(updated.getQuantity());

            repo.save(existing); // OR repo.update(existing) depending on your implementation
            return true;
        }
        return false;
    }

    @Override
    public boolean deleteDonationById(int id) {
        if (repo.existsById(id)) {
            repo.deleteDonationById(id);
            return true;
        }
        return false;
    }
    @Override
    public FoodDonation getDonationById(int id) {
        return repo.findById(id);
    }

    @Override
    public List<FoodDonation> getAllDonations() {
        return repo.getAllDonations();
    }

    @Override
    public List<FoodDonation> getDonationsByLocation(String location) {
        return repo.getDonationsByLocation(location);
    }

    @Override
    public long getDonationCount() {
        return repo.count();
    }
}
