package com.ishika.foodwaste.web.service;

import java.util.List;

import org.mindrot.jbcrypt.BCrypt;
import org.springframework.beans.factory.annotation.Autowired;

import com.ishika.foodwaste.jpa.entity.DeliveryPerson;
import com.ishika.foodwaste.jpa.entity.FoodDonation;
import com.ishika.foodwaste.jpa.entityManager.DeliveryPersonManager;
import com.ishika.foodwaste.web.interfaces.DeliveryFacade;

public class DeliveryService implements DeliveryFacade {
	 @Autowired
	    private DeliveryPerson deliveryRepo;

	    @Autowired
	    private DeliveryPersonManager deliveryManager;

	    @Override
	    public String login(String email, String password) {
	        DeliveryPerson person = deliveryManager.findByEmail(email);
	        if (person == null) {
	            return "Account doesn't exist";
	        }

	        if (!BCrypt.checkpw(password, person.getPassword())) {
	            return "Invalid password";
	        }

	        return "Login successful";
	    }

	    @Override
	    public String register(DeliveryPerson person) {
	        if (deliveryManager.findByEmail(person.getEmail()) != null) {
	            return "Account already exists";
	        }

	        person.setPassword(BCrypt.hashpw(person.getPassword(), BCrypt.gensalt()));
	        deliveryManager.save(person);
	        return "Registration successful";
	    }

	    @Override
	    public List<FoodDonation> getUnassignedOrders(String city) {
	        return deliveryManager.getUnassignedOrders(city);
	    }

	    @Override
	    public List<FoodDonation> getMyOrders(int deliveryPersonId) {
	        return deliveryManager.getOrdersByDeliveryPerson(deliveryPersonId);
	    }

	    @Override
	    public String takeOrder(int orderId, int deliveryPersonId) {
	        boolean result = deliveryManager.takeOrder(orderId, deliveryPersonId);
	        return result ? "Order taken successfully" : "Order already taken";
	    }

	    public DeliveryPerson getByEmail(String email) {
	        return deliveryRepo.findByEmail(email);
	    }
}
