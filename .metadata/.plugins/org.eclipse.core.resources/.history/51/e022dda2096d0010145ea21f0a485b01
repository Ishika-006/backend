package com.ishika.foodwaste.web.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.ishika.foodwaste.jpa.entity.Admin;
import com.ishika.foodwaste.jpa.entity.Donor;
import com.ishika.foodwaste.web.service.AdminService;
import com.ishika.foodwaste.web.service.DonorService;

import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.servlet.http.HttpSession;
@RestController
@RequestMapping("/donor")
public class DonorController {
	   @Autowired
	    private DonorService donorService;
	    @Autowired
	    private PasswordEncoder passwordEncoder;
    
    @PostMapping("/register")
    public ResponseEntity<?> registerAdmin(@RequestBody Donor donor) {
        boolean success = donorService.registerAdmin(donor);
        return success
            ? ResponseEntity.ok("donor registered successfully")
            : ResponseEntity.badRequest().body("donor registration failed");
    }
    
    
    @PostMapping("/login")
    public ResponseEntity<?> login(@RequestParam String email, @RequestParam String password, HttpSession session) {
        Donor donor = donorService.authenticate(email);
        if (donor == null) {
            return ResponseEntity.status(401).body("donor not found");
        }

        if (passwordEncoder.matches(password, donor.getPassword())) {
            session.setAttribute("donor", donor); // store in session
            return ResponseEntity.ok("donor login successful");
        } else {
            return ResponseEntity.status(401).body("Incorrect password");
        }
    }

}
