package com.ishika.foodwaste.jpa.entity;

import com.ishika.foodwaste.jpa.enums.Role;

import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;

public class Donor {
	  @Id
	    @GeneratedValue(strategy = GenerationType.IDENTITY)
	    private Long id;

	    public Long getId() {
		return id;
	}

	  public void setId(Long id) {
		  this.id = id;
	  }

	  public String getName() {
		  return name;
	  }

	  public void setName(String name) {
		  this.name = name;
	  }

	  public String getEmail() {
		  return email;
	  }

	  public void setEmail(String email) {
		  this.email = email;
	  }

	  public String getContact() {
		  return contact;
	  }

	  public void setContact(String contact) {
		  this.contact = contact;
	  }

	  public String getAddress() {
		  return address;
	  }

	  public void setAddress(String address) {
		  this.address = address;
	  }

	  public String getDonorType() {
		  return donorType;
	  }

	  public void setDonorType(String donorType) {
		  this.donorType = donorType;
	  }

	  public String getFoodDescription() {
		  return foodDescription;
	  }

	  public void setFoodDescription(String foodDescription) {
		  this.foodDescription = foodDescription;
	  }

	  public int getQuantity() {
		  return quantity;
	  }

	  public void setQuantity(int quantity) {
		  this.quantity = quantity;
	  }

	  public LocalDate getExpiryDate() {
		  return expiryDate;
	  }

	  public void setExpiryDate(LocalDate expiryDate) {
		  this.expiryDate = expiryDate;
	  }

	  public Role getRole() {
		  return role;
	  }

	  public void setRole(Role role) {
		  this.role = role;
	  }

		private String name;
	    private String email;
	    private String contact;
	    private String address;
	    private String donorType; // e.g., Individual / Restaurant

	    private String foodDescription;
	    private int quantity;
	    private LocalDate expiryDate;
	
    @Enumerated(EnumType.STRING)
    private Role role; 
}
